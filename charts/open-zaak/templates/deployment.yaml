apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "open-zaak.fullname" . }}
  labels:
  {{- include "open-zaak.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
  {{- include "open-zaak.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
    {{- include "open-zaak.selectorLabels" . | nindent 8 }}
    {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "open-zaak.serviceAccountName" . }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}

      {{- if and .Values.persistence.enabled .Values.initContainers.volumePerms }}
      # fix the file system permissions for the 1.5 upgrade
      initContainers:
        - name: volume-perms
          image: busybox:latest
          command: ['chown', '-R', '1000:1000', '/app/private-media']
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
            - name: media
              mountPath: /app/private-media
      {{- end }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ .Values.existingSecret | default (include "open-zaak.fullname" .) }}
            - configMapRef:
                name: {{ include "open-zaak.fullname" . }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          lifecycle:
            postStart:
              exec:
                # exit 0 = Don't fail because then the container will keep restarting without logging what is wrong.
                command:
                  - bash
                  - -c
                  - |
                    ( echo "=== postStart script started at $(date) ==="
                      set -x
                      HEXPORT=$( printf '%X' 8000 )
                      until grep -q ":$HEXPORT" /proc/net/tcp; do sleep 5; done
                      python /app/src/manage.py setup_configuration --no-selftest
                      exit 0
                    ) >> /app/log/postStart.log 2>&1
          livenessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Host
                  value: {{ include "open-zaak.fullname" . | quote }}
          {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Host
                  value: {{ include "open-zaak.fullname" . | quote }}
          {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: media
              mountPath: /app/private-media
      volumes:
        - name: media
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ include "open-zaak.fullname" . }}{{- end }}
          {{- else }}
          emptyDir: { }
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
  {{- toYaml . | nindent 8 }}
  {{- end }}

{{- if .Values.persistence.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "open-zaak.nginxFullname" . }}
  labels:
    {{- include "open-zaak.nginxLabels" . | nindent 4 }}
spec:
  {{- if not .Values.nginx.autoscaling.enabled }}
  replicas: {{ .Values.nginx.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "open-zaak.nginxSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap-nginx: {{ include (print $.Template.BasePath "/configmap-nginx.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "open-zaak.nginxSelectorLabels" . | nindent 8 }}
        {{- with .Values.nginx.podLabels }}
            {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "open-zaak.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: nginx
          securityContext:
            {{- toYaml .Values.nginx.securityContext | nindent 12 }}
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /_health/
              port: 8080
            {{- toYaml .Values.nginx.livenessProbe | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            {{- toYaml .Values.nginx.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/
            - name: media
              mountPath: /app/private-media
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ include "open-zaak.fullname" . }}{{- end }}
        - name: nginx-config
          configMap:
            name: {{ include "open-zaak.nginxFullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
